name: Continuous Integration and Deployment

on: 
  push:
    branches: [master, cicd-testing]
  pull_request:
    branches: [master, cicd-testing]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and run tests
        run: |
          docker-compose -f compose.test.yaml up --build -d
          docker-compose -f compose.test.yaml run web_scraper pytest
          docker-compose -f compose.test.yaml run api pytest

      - name: Clean up
        run: docker-compose -f compose.test.yaml down

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/cicd-testing'
    needs: build-and-test
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Print Github Context
        run: |
          echo "${{ toJson(github) }}"
    
      - name: Check Modified and Added Directories
        run: |
          MODIFIED_WEB_SCRAPING="false"
          MODIFIED_API="false"
          MODIFIED_CUSTOM_AIRBYTE="false"
          FILES=$(echo "${{ join(github.event.head_commit.modified, ' ') }} ${{ join(github.event.head_commit.added, ' ') }}")
          echo "Files to check: $FILES"
          for file in $FILES; do
            if [[ $file == web_scraping/* ]]; then
              MODIFIED_WEB_SCRAPING="true"
            fi
            if [[ $file == api/* ]]; then
              MODIFIED_API="true"
            fi
            if [[ $file == custom-airbyte-connector/* ]]; then
              MODIFIED_CUSTOM_AIRBYTE="true"
            fi
          done
          echo "MODIFIED_WEB_SCRAPING=$MODIFIED_WEB_SCRAPING" >> $GITHUB_ENV
          echo "MODIFIED_API=$MODIFIED_API" >> $GITHUB_ENV
          echo "MODIFIED_CUSTOM_AIRBYTE=$MODIFIED_CUSTOM_AIRBYTE" >> $GITHUB_ENV

      - name: Build and Push Web Scraper Image
        if: env.MODIFIED_WEB_SCRAPING == 'true'
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/roman-coins-data-pipeline:web_scraper-${{ github.sha }} ./web_scraping
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/roman-coins-data-pipeline:web_scraper-latest ./web_scraping
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/roman-coins-data-pipeline:web_scraper-${{ github.sha }}
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/roman-coins-data-pipeline:web_scraper-latest

      - name: Build and Push API Image
        if: env.MODIFIED_API == 'true'
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/roman-coins-data-pipeline:api-${{ github.sha }} ./api
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/roman-coins-data-pipeline:api-latest ./api
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/roman-coins-data-pipeline:api-${{ github.sha }}
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/roman-coins-data-pipeline:api-latest

      - name: Build and Push Custom Airbyte Image
        if: env.MODIFIED_CUSTOM_AIRBYTE == 'true'
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/roman-coins-data-pipeline:custom-airbyte-connector-${{ github.sha }} ./custom-airbyte-connector
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/roman-coins-data-pipeline:custom-airbyte-connector-latest ./custom-airbyte-connector
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/roman-coins-data-pipeline:custom-airbyte-connector-${{ github.sha }}
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/roman-coins-data-pipeline:custom-airbyte-connector-latest